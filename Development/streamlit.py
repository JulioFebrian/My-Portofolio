# -*- coding: utf-8 -*-
"""App.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-0vlP5lQmmIOUp9mojScm5RfzD2oJ8hC
"""

pip install streamlit

import streamlit as st

import pandas as pd
import numpy as np
import os
import pickle
import warnings

st.set_page_config(page_title="Crop Recommender", page_icon="🌿", layout='centered', initial_sidebar_state="collapsed")

def load_model(modelfile):
	loaded_model = pickle.load(open(modelfile, 'rb'))
	return loaded_model

def main():
    # title
    html_temp = """
    <div>
    <h1 style="color:MEDIUMSEAGREEN;text-align:left;"> Rekomendasi Tanaman Panen 🌱 </h1>
    </div>
    """
    st.markdown(html_temp, unsafe_allow_html=True)

    col1,col2  = st.beta_columns([2,2])
    
    with col1: 
        with st.beta_expander(" ℹ️ Information", expanded=True):
            st.write("""
            Rekomendasi tanaman adalah salah satu aspek terpenting dari pertanian presisi. Rekomendasi tanaman didasarkan pada sejumlah faktor. Pertanian presisi berusaha untuk mendefinisikan kriteria ini berdasarkan situs demi situs untuk mengatasi masalah pemilihan tanaman. Sementara metodologi "khusus lokasi" telah meningkatkan kinerja, masih ada kebutuhan untuk memantau hasil sistem. Sistem pertanian presisi tidak semuanya diciptakan sama.
            Namun, di bidang pertanian, sangat penting bahwa rekomendasi yang dibuat benar dan tepat, karena kesalahan dapat mengakibatkan kerugian materi dan modal yang signifikan.
            """)
        '''
        ## Bagaimana cara kerjanya ❓ 
        Lengkapi semua parameter dan model pembelajaran mesin akan memprediksi tanaman yang paling cocok untuk ditanam di pertanian tertentu berdasarkan berbagai parameter
        '''
    with col2:
        st.subheader(" Temukan tanaman yang paling cocok untuk ditanam di pertanian Anda 👨‍🌾")
        N = st.number_input("Nitrogen_(N)", 1,10000)
        P = st.number_input("Fosforus_(P)", 1,10000)
        K = st.number_input("Kalium_(K)", 1,10000)
        temp = st.number_input("Suhu",0.0,100000.0)
        humidity = st.number_input("Kelembaban dalam persen (%)", 0.0,100000.0)
        ph = st.number_input("pH", 0.0,100000.0)
        rainfall = st.number_input("Curah hujan dalam mm",0.0,100000.0)

        feature_list = [Nitrogen_(N), Fosforus_(P), Kalium_(K), Suhu, Kelembaban, pH, Curah_Hujan]
        single_pred = np.array(feature_list).reshape(1,-1)
        
        if st.button('Predict'):

            loaded_model = load_model('model.pkl')
            prediction = loaded_model.predict(single_pred)
            col1.write('''
		    ## Results 🔍 
		    ''')
            col1.success(f"{prediction.item().title()} direkomendasikan oleh machine learning untuk peternakan Anda.")
      #code for html ☘️ 🌾 🌳 👨‍🌾  🍃

    st.warning("Catatan: Aplikasi A.I ini hanya untuk tujuan pendidikan/demo dan tidak dapat diandalkan. Periksa kode sumber [disini](https://github.com/C22PS131/BangTanI2022/tree/main/Project%20Bangkit)")
    hide_menu_style = """
    <style>
    #MainMenu {visibility: hidden;}
    </style>
    """

hide_menu_style = """
        <style>
        #MainMenu {visibility: hidden;}
        </style>
        """

st.markdown(hide_menu_style, unsafe_allow_html=True)

if __name__ == '__main__':
	main()